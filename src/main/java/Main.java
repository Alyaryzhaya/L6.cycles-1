import ru.netology.lekcii.SqrtService;

public class Main {

    public static void main(String[] args) {

        //       int x = 5;

//       условный оператор идет выполнять cледующий кусок кода, если условие не выполняется
//        if (x > 0) {
//            System.out.println("Hello");


//       WHILE  опять вернется к условию и опять его проверит. И если опять Да - опять выполнит код
//        while (x > 0){
//            System.out.println("Hello");


//       (сделаем так, чтобы условие сначала было положительным, потом нет)
//        while (x < 10) {
//            System.out.println("Hello, " + x);
//            x = x + 1;
//     ответ Hello5, Hello6...Hello9

//=======================================================================

//          FOR  - в конце каждой итерации выполняет код
        //         for (int i = 0; i < 10; i++) {  //в конце итерации прибавляет к i единицу


//=============================================================================

//            CONTINUE, BREAK - Управление циклами :

//                if (i == 3 ){
//                    continue; // число 3 не будет проверяться, итерация его завершена. Перейдет сразу к проверке 4
//                }
//                if(i == 6){
//                    break; // как только значение станет 6, выполнение прекратится, включая саму 6
//                }
//                System.out.println(i);
//=======================================================================

        //        КВАДРАТНЫЙ КОРЕНЬ

            // int x = 27;

// всю логику переносим в класс SqrtService:

//            for (int i = 1; i <= x; i++) {
//                if (i * i >= x) {
//           System.out.println("Корень " + x + " равен " + i);
//           break;
//           вместо вывода на экран пишем return, и он сам прекратит выполнение команды
//                    return i;


//  здесь просто вызываем метод:
//  1. создаем объект
//  2. вызываем у него метод
        SqrtService service = new SqrtService();
        System.out.println(service.calcSqrt(27));


                }
            }








